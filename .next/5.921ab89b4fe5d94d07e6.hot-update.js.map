{"version":3,"file":"5.921ab89b4fe5d94d07e6.hot-update.js","sources":["webpack:///pages/people/index.js","webpack:///services/swapi.js"],"sourcesContent":["import React from 'react'\r\nimport { fetchPeople } from '../../services/swapi'\r\nimport Router from 'next/router'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nexport default class People extends React.Component {\r\n    \r\n    \r\n    state = {\r\n        results: []\r\n    }\r\n    \r\n    componentDidMount() {\r\n        fetchPeople()\r\n        .then(res => this.setState({results: res.results}))\r\n       \r\n    }\r\n    \r\n    render() {\r\n        const CustomTableCell = withStyles(theme => ({\r\n            head: {\r\n              backgroundColor: theme.palette.common.black,\r\n              color: theme.palette.common.white,\r\n            },\r\n            body: {\r\n              fontSize: 14,\r\n            },\r\n          }))(TableCell);\r\n        \r\n        return (\r\n           \r\n            <Paper>\r\n            <Table >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <CustomTableCell>name</CustomTableCell>\r\n                  <CustomTableCell >height</CustomTableCell>\r\n                  <CustomTableCell >mass</CustomTableCell>\r\n                  <CustomTableCell >hair_color</CustomTableCell>\r\n                  <CustomTableCell >skin_color</CustomTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {this.state.results.map((item) => \r\n                        <TableRow onClick={()=>Router.push({\r\n                            pathname: '/detailPerson',\r\n                            query: { p: item.url }\r\n                            \r\n                        })} key={item.url}>\r\n                    \r\n                      <CustomTableCell component=\"th\" scope=\"row\">\r\n                        {item.name}\r\n                      </CustomTableCell>\r\n                      <CustomTableCell >{item.height}</CustomTableCell>\r\n                      <CustomTableCell >{item.mass}</CustomTableCell>\r\n                      <CustomTableCell >{item.hair_color}</CustomTableCell>\r\n                      <CustomTableCell >{item.skin_color}</CustomTableCell>\r\n                    </TableRow>\r\n                \r\n                )\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n        )\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// pages/people/index.js","import fetch from 'fetch-everywhere'\r\nexport const fetchPeople = () => {\r\n\r\n    return fetch(`https://swapi.co/api/people/`)\r\n\r\n        .then(response => {\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response\r\n            } else {\r\n                var error = new Error(response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            return Promise.resolve(res)\r\n        })\r\n}\r\nexport const fetchDetails = (_id) => {\r\n   \r\n\r\n    return fetch(_id)\r\n    \r\n    .then(response => {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response\r\n        } else {\r\n            var error = new Error(response.statusText)\r\n            error.response = response\r\n            throw error\r\n        }   \r\n    })\r\n    .then(response => response.json())\r\n    .then(res => {\r\n        return Promise.resolve(res)\r\n    })\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// services/swapi.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AADA;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAAA;AAUA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAbA;AAsBA;;;;;;;;;;;AA5DA;AACA;AADA;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;AApCA;AAkBA;;;;;;;;;A","sourceRoot":""}